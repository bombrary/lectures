[ビット演算子]
ビットを操作するための演算子が用意されている。
どれも真偽値における「かつ」や「または」などと性質が似ていることに注目しよう
まず、1ビットのみのビット演算について述べる。
1.not(否定)
ビットを反転させる演算子である。
0を1、1をゼロに変える。
2.or(論理和)
二つのビットを比較して、
二つのどちらか一方が1なら1、そうでないなら0を返す演算子。
3.and(論理積)
二つのビットを比較して
二つのどちらも1なら1、そうでないなら0を返す演算子。
4.xor(排他的論理和)
二つのビットを比較して
二つのどちらか一方のみが1なら1、そうでないなら0を返す演算子。

1～4の演算を二つの数の2進数各桁について行った結果を返してくれるのが、それぞれnot演算子、or演算子、and演算子、xor演算子である。

5.シフト演算子
ビット単位で桁をずらす演算子が存在する。これには右シフトと左シフト演算子が担っている。
左シフト演算子は、ビットを全て左にずらす。溢れた桁は消える。右には0が埋められる。
右シフト演算子は、ビットを全て右にずらす。溢れた桁は消える。左に0を埋めるか1を埋めるかは、状況による。