累積和の実装方法
配列aの累積和sを考える。
aのサイズをnとする。

(1)sataniC++
s[0] = a[0];
for(int i = 1; i < n; i++) {
	s[i] = s[i - 1] + a[i];
}

partsum(int l, int r) {
	if(l > r) swap(l, r);
	if(l == 0) return s[r];
	return s[r] - s[l - 1];
}

(2)seica先輩
for(int i = 0; i < n; i++) {
	s[i] = a[i];
}
for(int i = 0; i < n - 1; i++) {
	s[i + 1] += s[i];
}

a,sの両端にINF,-INFを入れておくと、配列の範囲外参照を気にする必要がなくなる。
ただしこれは、条件を満たす数のインデックスを二分探索などで見つける場合に限る。
s.push_back(INF); s.push_back(-INF); sort(s.begin(), s.end());
for(int i = 9; i < n - 1; i++) {
	s[i + 1] += s[i];
}

(3)yutaka1999
for(int i = 0; i < n; i++) {
	sum[i] = X[i];
	if(i > 0) sum[i] += sum[i - 1];
}

int get(int s, t) {
	return sum[t] - (s == 0 ? 0 : sum[s - 1]);
}

(4)drken
sum[0] = 0;
for(int i = 0; i < n; i++) {
	sum[i + 1] = sum[i] + a[i];
}